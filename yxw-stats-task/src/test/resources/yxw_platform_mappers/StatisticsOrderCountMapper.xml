<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yxw.stats.entity.platform.OrderCount">
	
	<resultMap id="orderCountQueryResultMap" type="com.yxw.stats.entity.platform.OrderCount">
		<result column="DATE" property="date" jdbcType="VARCHAR" />
		<result column="HOSPITAL_ID" property="hospitalId" jdbcType="VARCHAR" />
		<result column="BRANCH_ID" property="branchId" jdbcType="VARCHAR" />
		<result column="COUNT" property="count" jdbcType="INTEGER" />
		<result column="REG_TYPE" property="regType" jdbcType="INTEGER" />
		<result column="NO_PAYMENT" property="reservationNoPayment" jdbcType="INTEGER" />
		<result column="PAYMENT" property="reservationPayment" jdbcType="INTEGER" />
		<result column="REFUND" property="reservationRefund" jdbcType="INTEGER" />
		<result column="REG_PAY_FEE" property="regPayFee" jdbcType="DOUBLE" />
		<result column="REG_REFUND_FEE" property="regRefundFee" jdbcType="DOUBLE" />
		<result column="BIZ_MODE" property="bizMode" jdbcType="INTEGER" />
		<result column="PAY_MODE" property="payMode" jdbcType="INTEGER" />
		<result column="MEDICARE_PAYMENTS" property="medicarePayments" jdbcType="INTEGER" />
	</resultMap>
	
	
	<!-- 统计每日订单 -->
	<select id="findRegOrderCountByDate" resultMap="orderCountQueryResultMap" parameterType="map">
		SELECT 
			from_UNIXTIME(#{startDate} / 1000,'%Y-%m-%d') as DATE,
			r1.HOSPITAL_ID AS HOSPITAL_ID,
			r1.BRANCH_ID AS BRANCH_ID,
			REG_TYPE AS REG_TYPE,
			<!-- sum(r1.count) AS COUNT, -->
			sum(CASE r1.PAY_STATUS when 1 then r1.count else 0 END) as NO_PAYMENT,
			sum(CASE r1.PAY_STATUS when 2 then r1.count else 0 END) as PAYMENT,
			sum(CASE r1.PAY_STATUS when 3 then r1.count else 0 END) as REFUND,
			sum(CASE r1.PAY_STATUS when 2 then r1.REG_FEE else 0 END) as REGPAYFEE,
			sum(CASE r1.PAY_STATUS when 3 then r1.REG_FEE else 0 END) as REGREFUNDFEE,
			r1.BIZ_MODE AS BIZ_MODE,
			r1.PAY_MODE as PAY_MODE,
			r1.MEDICARE_PAYMENTS as MEDICARE_PAYMENTS
		FROM (
			SELECT 
				COUNT(1) as count, 
				PAY_STATUS as PAY_STATUS, 
				HOSPITAL_ID AS HOSPITAL_ID, 
				BRANCH_ID AS BRANCH_ID, 
				REG_TYPE AS REG_TYPE,
				REG_MODE AS BIZ_MODE,
				ifnull(
					IS_MEDICARE_PAYMENTS,
					0
				) as MEDICARE_PAYMENTS,
				ifnull(
					IS_QR,
					0
				) as PAY_MODE
			,
				SUM(
					(
			ifnull(
				REAL_TREAT_FEE,
				0
			) + ifnull(
				REAL_REG_FEE,
				0
			)
		) 
				) AS REG_FEE
			FROM 
				<choose>
				    <when test="hashTableName == 'BIZ_REGISTER_RECORD_1'">
				         BIZ_REGISTER_RECORD_1 
				    </when>
				    <when test="hashTableName == 'BIZ_REGISTER_RECORD_2'">
				         BIZ_REGISTER_RECORD_2 
				    </when>
				    <when test="hashTableName == 'BIZ_REGISTER_RECORD_3'">
				         BIZ_REGISTER_RECORD_3 
				    </when>
				    <when test="hashTableName == 'BIZ_REGISTER_RECORD_4'">
				         BIZ_REGISTER_RECORD_4 
				    </when>
				    <when test="hashTableName == 'BIZ_REGISTER_RECORD_5'">
				         BIZ_REGISTER_RECORD_5 
				    </when>
				    <when test="hashTableName == 'BIZ_REGISTER_RECORD_6'">
				         BIZ_REGISTER_RECORD_6 
				    </when>
				    <when test="hashTableName == 'BIZ_REGISTER_RECORD_7'">
				         BIZ_REGISTER_RECORD_7 
				    </when>
				    <when test="hashTableName == 'BIZ_REGISTER_RECORD_8'">
				         BIZ_REGISTER_RECORD_8 
				    </when>
				    <when test="hashTableName == 'BIZ_REGISTER_RECORD_9'">
				         BIZ_REGISTER_RECORD_9 
				    </when>
				    <when test="hashTableName == 'BIZ_REGISTER_RECORD_10'">
				         BIZ_REGISTER_RECORD_10 
				    </when>
			    </choose>
			WHERE 
				REGISTER_TIME BETWEEN #{startDate} AND  #{endDate} OR 
				PAY_TIME BETWEEN #{startDate} AND  #{endDate} OR 
				REFUND_TIME BETWEEN #{startDate} AND  #{endDate}
			GROUP BY BRANCH_ID,PAY_STATUS,REG_TYPE,REG_FEE,BIZ_MODE,PAY_MODE,MEDICARE_PAYMENTS
			) AS r1 GROUP BY BRANCH_ID,PAY_STATUS,REG_TYPE,REG_FEE,BIZ_MODE,PAY_MODE,MEDICARE_PAYMENTS
			ORDER BY REG_TYPE
	</select>
	
	<!-- 批量插入 -->
	<insert id="batchInsert" parameterType="java.util.List">
		 INSERT INTO 
		 SYS_REG_STATISTICAL_1(
		 
		 ID,
		 DATE,
		 HOSPITAL_ID,
		 BRANCH_ID,
		 RESERVATION_NO_PAYMENT,
		 RESERVATION_PAYMENT,
		 RESERVATION_REFUND,
		 DUTY_NO_PAYMENT,
		 DUTY_PAYMENT,
		 DUTY_REFUND,
		 REG_PAY_FEE,
		 REG_REFUND_FEE,
		 BIZ_MODE,
		 
		 
		 RESERVATION_NO_PAYMENT_WECHAT,
		 RESERVATION_PAYMENT_WECHAT,
		 RESERVATION_REFUND_WECHAT,
		 DUTY_NO_PAYMENT_WECHAT,
		 DUTY_PAYMENT_WECHAT,
		 DUTY_REFUND_WECHAT,
		 REG_PAY_FEE_WECHAT,
		 REG_REFUND_FEE_WECHAT,
		 
		 
	        
	     RESERVATION_NO_PAYMENT_ALIPAY,
		 RESERVATION_PAYMENT_ALIPAY,
		 RESERVATION_REFUND_ALIPAY,
		 DUTY_NO_PAYMENT_ALIPAY,
		 DUTY_PAYMENT_ALIPAY,
		 DUTY_REFUND_ALIPAY,
		 REG_PAY_FEE_ALIPAY,
		 REG_REFUND_FEE_ALIPAY,
		 PAY_MODE,
		 MEDICARE_PAYMENTS
		
		 )
		 VALUES
	    <foreach collection="list" item="item" index="index" separator="," >  
	        (#{item.id},
	        #{item.date},
	        #{item.hospitalId},
	        #{item.branchId},
	        #{item.reservationNoPayment},
	        #{item.reservationPayment},
	        #{item.reservationRefund},
	        #{item.dutyNoPayment},
	        #{item.dutyPayment},
	        #{item.dutyRefund},
	        #{item.regPayFee},
	        #{item.regRefundFee},
	        #{item.bizMode},
	        
	        #{item.reservationNoPaymentByWechat},
	        #{item.reservationPaymentByWechat},
	        #{item.reservationRefundByWechat},
	        #{item.dutyNoPaymentByWechat},
	        #{item.dutyPaymentByWechat},
	        #{item.dutyRefundByWechat},
	        #{item.regPayFeeByWechat},
	        #{item.regRefundFeeByWechat},
	        
	        
	        #{item.reservationNoPaymentByAlipay},
	        #{item.reservationPaymentByAlipay},
	        #{item.reservationRefundByAlipay},
	        #{item.dutyNoPaymentByAlipay},
	        #{item.dutyPaymentByAlipay},
	        #{item.dutyRefundByAlipay},
	        #{item.regPayFeeByAlipay},
	        #{item.regRefundFeeByAlipay},
	        #{item.payMode},
	        #{item.medicarePayments}
	        
	        )
	    </foreach>  
	</insert>
</mapper>