#logback config
logback.home=/data/wwwroot/yxw_mobileapp/logs
logback.fileName=yx129
logback.appName=yx129

#Jedis Pool Config
#maxActive:控制一个pool可分配多少个jedis实例,通过pool.getResource()来获取;如果赋值为-1,则表示不限制;如果pool已经分配了maxActive个jedis实例,则此时pool的状态为exhausted(耗尽)
redis.pool.maxTotal = 10000

#maxWait:表示当borrow(引入)一个jedis实例时,最大等待毫秒数,如果超过等待时间,则直接抛出JedisConnectionException 小于零:阻塞不确定的时间,  默认-1
redis.pool.maxWaitMillis = 60000

#maxIdle:控制一个pool最多有多少个状态为idle(空闲)的jedis实例;
redis.pool.maxIdle = 300

#maxIdle:控制一个pool最少有多少个状态为idle(空闲)的jedis实例;
redis.pool.minIdle = 50

#testOnBorrow：获得一个jedis实例的时候是否检查连接可用性;如果为true,则得到的jedis实例均是可用的;
redis.pool.testOnBorrow = true
#testOnReturn：在return给pool时,是否检查连接可用性(ping())
redis.pool.testOnReturn = false 

#testWhileIdle:如果为true,表示有一个idle object evitor线程对idle object进行扫描,如果validate失败,此object会被从pool中drop掉;
#              这一项只有在timeBetweenEvictionRunsMillis大于0时才有意义;
redis.pool.testWhileIdle = true

#numTestsPerEvictionRun：表示idle object evitor每次扫描的最多的对象数,默认-1
redis.pool.numTestsPerEvictionRun = 10

#timeBetweenEvictionRunsMillis:表示idle object evitor两次扫描之间要sleep的毫秒数;默认值30000(30秒)
redis.pool.timeBetweenEvictionRunsMillis = 120000

#minEvictableIdleTimeMillis:表示一个对象至少停留在idle状态的最短时间,然后才能被idle object evitor扫描并驱逐; 
#                           这一项只有在timeBetweenEvictionRunsMillis大于0时才有意义;默认值60000(60秒)
redis.pool.minEvictableIdleTimeMillis = 60000


#redisPool config
#连接redis服务器的等待超时时间 默认是2000毫秒 
redis.connection.timeout=60000
redis.connection.password=yixiang129
#健康易开发缓存
redis.connection.host=192.168.8.168
#健康易测试缓存
#redis.connection.host=120.24.95.209
#健康易正式缓存
#redis.connection.host=120.25.13.115
redis.connection.port=6789

redis.connection.hosts = 127.0.0.1 , 127.0.0.2
redis.connection.names = temp1 , temp2
redis.connection.ports = 80 , 80
redis.connection.timeouts = 5000 , 5000
redis.connection.weights = 3 ,3
